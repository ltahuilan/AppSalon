{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"bundle.js","sourcesContent":["//varibales globales\r\nlet pagina = 1;\r\n\r\nconst cita = {\r\n    nombre: '',\r\n    fecha: '',\r\n    hora: '',\r\n    servicios : []\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n    startApp();\r\n});\r\n\r\n\r\nfunction startApp () {\r\n    getDatos();\r\n\r\n    //Resalta el DIV actual según el tab al que se presiona\r\n    mostrarSeccion();\r\n\r\n    //Oculta o muestra una seccion según e tab al que se presiona\r\n    cambiarSeccion();\r\n\r\n    //pagina anterior\r\n    paginaAnterior();\r\n\r\n    //pagina siguiente\r\n    paginaSiguiente();\r\n\r\n\r\n    botonesPaginador();\r\n\r\n    //validar servicios\r\n    mostrarResumen();\r\n\r\n    //Asignar nombre cita al objeto\r\n    nombreCita();\r\n\r\n    //Deshabilitar fechas previas al día actual\r\n    desactivarFechaPrevia ();\r\n\r\n    //Asignar fecha de cita al objeto\r\n    fechaCita();\r\n\r\n    horaCita();\r\n\r\n};\r\n\r\n/**Muestra la seccion actual basado en pagina establecida como inicial */\r\nfunction mostrarSeccion () {\r\n\r\n    /**evalua ssi algun DIV contiene la clase .mostrar-seccion,\r\n     * si devuelve true elimiina la clase*/\r\n    const seccionPrevia = document.querySelector('.mostrar-seccion');\r\n    if (seccionPrevia) {\r\n        seccionPrevia.classList.remove('mostrar-seccion');\r\n    }\r\n\r\n    /**agrega la clase .mostrar-seccion de acuerdo a variable global */\r\n    const seccionActual = document.querySelector(`#paso-${pagina}`);\r\n    seccionActual.classList.add('mostrar-seccion');\r\n\r\n\r\n    /**evalua si algún link hijo de 'tab' contiene la clase .activo\r\n     * si devuelve 'true' elimina la clase\r\n     */\r\n    const tabPrevio = document.querySelector('.tabs .activo');\r\n    if (tabPrevio) {\r\n        tabPrevio.classList.remove('activo');\r\n    }\r\n\r\n    /**agrega .activo al boton del tab actual */\r\n    const tabActual = document.querySelector(`[data-pagina=\"${pagina}\"]`);\r\n    tabActual.classList.add('activo');\r\n}\r\n\r\nfunction cambiarSeccion () {\r\n    const enlaces = document.querySelectorAll('.tabs button');\r\n\r\n    enlaces.forEach( enlace => {\r\n        enlace.addEventListener('click', event => {\r\n            event.preventDefault();\r\n            pagina = parseInt(event.target.dataset.pagina);\r\n\r\n            mostrarSeccion();\r\n            botonesPaginador();\r\n            \r\n        })\r\n    })\r\n};\r\n\r\n\r\nasync function getDatos () {\r\n\r\n    try {\r\n\r\n        // const file = '../../servicios.json';\r\n        // const resultado = await fetch(file);\r\n\r\n        const url = 'http://localhost:3000/servicios.php';\r\n        const resultado = await fetch(url);\r\n        const servicios = await resultado.json();\r\n\r\n        // const {servicios} = datos; //Object Destructurion\r\n\r\n        //construyendo el HTML\r\n        servicios.forEach( function (servicio) {\r\n\r\n            //Destructuring\r\n            const { id, nombre, precio } = servicio  // const id = servicio.id \r\n\r\n            //DOM Scripting\r\n            //crando HTML nombre servicio\r\n            const nombreServicio = document.createElement('P');\r\n            nombreServicio.textContent = nombre;\r\n            nombreServicio.classList.add('nombre-servicio');\r\n\r\n            //creando HTML precio servicio\r\n            const precioServicio = document.createElement('p');\r\n            precioServicio.textContent = `$ ${precio}`;\r\n            precioServicio.classList.add('precio-servicio');\r\n\r\n            //creando HTML contenedor servicio\r\n            const contenedorServicio = document.createElement('DIV');\r\n            contenedorServicio.classList.add('servicio');\r\n            contenedorServicio.dataset.idServicio = id; //atributo personalizado para seleccionar enelemntos\r\n            \r\n            //inyectando parrafos en condenedor DIV\r\n            contenedorServicio.appendChild(nombreServicio);\r\n            contenedorServicio.appendChild(precioServicio);\r\n\r\n            //seleccionar servicio (evento)\r\n            contenedorServicio.onclick = seleccionaServicio;\r\n\r\n            //inyectando en el HTML\r\n            document.querySelector('#servicios').appendChild(contenedorServicio);\r\n\r\n            // console.log(contenedorServicio);\r\n            \r\n        });\r\n        \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n};\r\n\r\nfunction seleccionaServicio(e) {    /**funcion llamada desde getDatos() */\r\n\r\n    let elemento;\r\n    /**forzar que el elemento seleccionado sea un DIV */\r\n\r\n    /**devuelven el nombre de la entiqueta:  \"nodeName\", \"tagname\".\r\n     * estan dentro de localNameExplicitOriginalTarget */\r\n\r\n    if (e.target.nodeName == 'P') {\r\n        elemento = e.target.parentElement; //devuelve DIV el ancestro de 'P'\r\n    }else {\r\n        elemento = e.target; //devuelve DIV\r\n    }\r\n\r\n    /**agregar / quitar la clase 'seleccionado'\r\n     * NOTA: se peude hacer utilizando el metodo '.toggle': elemento.classList.toggle('seleccionado');\r\n     */\r\n\r\n    if (elemento.classList.contains('seleccionado')) {\r\n        elemento.classList.remove('seleccionado');\r\n\r\n        //eliminando servicio\r\n        const id = parseInt(elemento.dataset.idServicio);\r\n\r\n        //se pasa el id como argumento\r\n        eliminaServicio(id);\r\n    }else {\r\n        elemento.classList.add('seleccionado');\r\n        \r\n        //creando objeto de servicio\r\n        const servicioObj = {\r\n            id: parseInt(elemento.dataset.idServicio),\r\n            nombre: elemento.firstElementChild.textContent,\r\n            precio: elemento.firstElementChild.nextElementSibling.textContent\r\n        }\r\n        // console.log(servicioObj);\r\n        agregaServicio(servicioObj);\r\n    }\r\n}\r\n\r\n//Agrega servicio\r\nfunction agregaServicio (servicioObj) {\r\n\r\n    //destructuring\r\n    const {servicios} = cita;\r\n\r\n    /**crea una copia del del arreglo de servicios utilizando el operador tres puntos (...)\r\n     * agrega al arreglo el nuevo objeto serviciosObj pasado como parámetro desde seleccionaServicio()\r\n     */\r\n    cita.servicios = [...servicios, servicioObj];\r\n\r\n    /**SIN OPERADOR PUNTO \r\n     * 1) crea copia de arreglo servicios\r\n     * 2) agrega objeto al arreglo con metodo push()\r\n     * 3) se asigna el arreglo modificado al arreglo global\r\n    */\r\n    // const serviciosCpy = servicios;\r\n    // serviciosCpy.push(servicioObj);\r\n    // cita.servicios = serviciosCpy;\r\n\r\n    // console.log(`Agregando servicio...`);\r\n    // console.log(cita.servicios);\r\n}\r\n\r\n\r\nfunction eliminaServicio (id) {\r\n\r\n    //destructuring\r\n    const {servicios} = cita;\r\n\r\n    /**Almacena en cita.servicios todos los servicios que sean diferentes del servicio con\r\n     * el id pasado como argumento desde seleccionaServicio()\r\n     */\r\n    cita.servicios = servicios.filter(function (servicio) {\r\n        return servicio.id !== id;\r\n    });\r\n\r\n    // console.log(cita.servicios);\r\n}\r\n\r\n\r\nfunction nombreCita() {\r\n    const nombreInput = document.querySelector('#nombre');\r\n    nombreInput.addEventListener('input', event => {\r\n        \r\n        const nombreTexto = event.target.value.trim(); //metodo trim elimina espaciosn al inico y final\r\n        \r\n        //comprobando contenido del input\r\n        if (nombreTexto == '' || nombreTexto.length < 3 ) {\r\n            mostrarAlerta ('El nombre esta vacío o no es correcto', 'error');\r\n        }else {\r\n\r\n            //comprobar si existe un alerta activa\r\n            const alerta = document.querySelector('.alerta');\r\n            if (alerta) {\r\n                alerta.remove();\r\n            }\r\n\r\n            cita.nombre = nombreTexto;\r\n        }\r\n        // console.log(cita);\r\n    });\r\n\r\n};\r\n\r\nfunction fechaCita () {\r\n    const fechaInput = document.querySelector('#fecha');\r\n    fechaInput.addEventListener('input', event => {\r\n\r\n        const dia = new Date(event.target.value).getUTCDay(); //getUTCDay() retorna el numero del día de la semana\r\n\r\n        //numeracion de día comienza en 0 (domingo)\r\n        if (dia == 0) {\r\n            \r\n            event.preventDefault();\r\n            fechaInput.value = '';\r\n            cita.fecha = fechaInput.value;\r\n            mostrarAlerta('Domingo día no permitido', 'error');\r\n            \r\n        }else {\r\n            cita.fecha = fechaInput.value;\r\n        }\r\n    });\r\n};\r\n\r\n\r\nfunction desactivarFechaPrevia () {\r\n    const fechaMin = document.querySelector('#fecha');\r\n    const fechaAhora = new Date();\r\n    const year = fechaAhora.getUTCFullYear();\r\n    const mes = fechaAhora.getUTCMonth() + 1;\r\n    const dia = fechaAhora.getDate();\r\n\r\n    //Formato de fecha buscado AAAA-MM-DD\r\n    if (mes < 10 && dia < 10) {\r\n        fechaMin.min = `${year}-0${mes}-0${dia}`;\r\n    }else if (dia < 10) {\r\n        fechaMin.min = `${year}-${mes}-0${dia}`;\r\n    }else if (mea < 10){\r\n        fechaMin.min = `${year}-0${mes}-${dia}`;\r\n    }else {\r\n        fechaMin.min = `${year}-${mes}-${dia}`;\r\n    }\r\n}\r\n\r\n\r\nfunction horaCita () {\r\n\r\n    const horaInput = document.querySelector('#hora');\r\n    horaInput.addEventListener('input', event => {\r\n\r\n        const getHora = event.target.value;\r\n        const hora = getHora.split(':');\r\n\r\n        if (hora[0] < 09 || hora[0] > 18) {\r\n            mostrarAlerta('El horario no es correcto', 'error');\r\n            setTimeout ( () => {                \r\n                horaInput.value = '';\r\n            }, 3500);\r\n        }else {\r\n            cita.hora = getHora;\r\n        }\r\n    });\r\n\r\n};\r\n\r\nfunction paginaAnterior () {\r\n    const anterior = document.querySelector('#anterior');\r\n    anterior.addEventListener('click', () => {\r\n        pagina --;\r\n        botonesPaginador();\r\n    })\r\n}\r\n\r\nfunction paginaSiguiente () {\r\n    const siguiente = document.querySelector('#siguiente');\r\n    siguiente.addEventListener('click', () => {\r\n        pagina++;\r\n        botonesPaginador();\r\n    })\r\n\r\n}\r\n\r\n/**Evalua el id de la seccion mostrada en pantalla\r\n * agrega/elimina la clase .oculto para ocultar o mostrar\r\n * la sección\r\n*/\r\n\r\nfunction botonesPaginador() {\r\n    const btnAnterior = document.querySelector('#anterior');\r\n    const btnSiguiente = document.querySelector('#siguiente');\r\n\r\n    if (pagina === 1) {\r\n        btnAnterior.classList.add('oculto');\r\n        btnSiguiente.classList.remove('oculto');\r\n    }else if (pagina === 3) {\r\n        btnSiguiente.classList.add('oculto');\r\n        btnAnterior.classList.remove('oculto');\r\n        mostrarResumen();\r\n    }else {\r\n        btnSiguiente.classList.remove('oculto');\r\n        btnAnterior.classList.remove('oculto');\r\n    }\r\n\r\n    /**llama a la fuinción mostrarSeccion */\r\n    mostrarSeccion();\r\n}\r\n\r\n\r\nfunction mostrarResumen() {\r\n\r\n    //destructuring\r\n    const {nombre, fecha, hora, servicios} = cita;\r\n    \r\n    //Selector de sección resumen\r\n    const resumen = document.querySelector('.resumen');\r\n\r\n    //Limpia cualquier HTML activo en la sección resumen\r\n    // resumen.innerHTML = '';\r\n\r\n    while (resumen.firstChild) {\r\n        resumen.removeChild(resumen.firstChild);\r\n    }\r\n    \r\n    //validación de objeto\r\n    if (Object.values(cita).includes('')) {\r\n\r\n        const citaVacia = document.createElement('P');\r\n        citaVacia.textContent = 'Faltan datos en la cita, verificar Nombre, Fecha, Hora, Servicios';\r\n        citaVacia.classList.add('invalidar-cita');\r\n        resumen.appendChild(citaVacia);\r\n\r\n        return;\r\n    }\r\n    \r\n    const contenedorCita = document.createElement('DIV');\r\n    contenedorCita.classList.add('contenedor-cita');\r\n    resumen.appendChild(contenedorCita);\r\n\r\n    /**Se recomienda uso de innerHTML para interpretar etiquetas HTML en un string */\r\n    const headCita = document.createElement('H3');\r\n    headCita.textContent = 'Tu Cita';\r\n\r\n    const muestraNombre = document.createElement('P');\r\n    muestraNombre.innerHTML = `<span>Nombre: </span> ${nombre}`;\r\n\r\n    const muestraFecha = document.createElement('P');\r\n    muestraFecha.innerHTML = `<span>Fecha: </span> ${fecha}`;\r\n\r\n    const muestraHora = document.createElement('P');\r\n    muestraHora.innerHTML = `<span>Hora: </span> ${hora}`;\r\n    \r\n    const resumenServicio = document.createElement('DIV');\r\n    resumenServicio.classList.add('resumen-servicio');\r\n\r\n    const headResumen = document.createElement('H3');\r\n    headResumen.textContent = 'Resumen de servicios solicitados';\r\n\r\n    resumenServicio.appendChild(headResumen);\r\n    \r\n    let total = 0;\r\n\r\n    cita.servicios.forEach(servicio => {\r\n\r\n        //destructuring\r\n        const {nombre, precio} = servicio;\r\n\r\n        //Construye HTML para mostrar servicios\r\n        const contenedorServicio = document.createElement('DIV');\r\n        contenedorServicio.classList.add('contenedor-servicio');\r\n\r\n        const nombreServicio = document.createElement('P');\r\n        nombreServicio.classList.add('servicio')\r\n        nombreServicio.textContent = nombre;\r\n\r\n        const precioServicio = document.createElement('P');\r\n        precioServicio.classList.add('precio');\r\n        precioServicio.textContent = precio;\r\n\r\n        const cantidad = precio.split('$');\r\n        total += parseInt(cantidad[1].trim());   \r\n        \r\n        contenedorServicio.appendChild(nombreServicio);\r\n        contenedorServicio.appendChild(precioServicio);\r\n        resumenServicio.appendChild(contenedorServicio);\r\n    })\r\n\r\n    contenedorCita.appendChild(headCita);\r\n    contenedorCita.appendChild(muestraNombre);\r\n    contenedorCita.appendChild(muestraFecha);\r\n    contenedorCita.appendChild(muestraHora);\r\n    resumen.appendChild(resumenServicio);\r\n\r\n    const totalPagar = document.createElement('P');\r\n    totalPagar.classList.add('total-pagar');\r\n    totalPagar.innerHTML = `Total a Pagar: <span>$ ${total}.00</span>`;\r\n\r\n    resumen.appendChild(totalPagar);\r\n}\r\n\r\n\r\nfunction mostrarAlerta (mensaje, error) {\r\n\r\n    /**verificar si existe una alerta activa\r\n     * return detiene la ejecución del resto del codigo en la función\r\n     */\r\n    const alertaPrevia = document.querySelector('.alerta');\r\n    if (alertaPrevia) {\r\n        // alertaPrevia.remove();\r\n        return;\r\n    }\r\n\r\n    const alerta = document.createElement('P');\r\n    alerta.textContent = mensaje;\r\n    alerta.classList.add('alerta');\r\n\r\n\r\n    if (error == 'error') {\r\n        alerta.classList.add('error');\r\n    }\r\n    \r\n    //inyectar en HTML\r\n    const formulario = document.querySelector('.formulario');\r\n    formulario.appendChild(alerta);\r\n    \r\n    //Eliminar la alerta después de un cierto tiempo\r\n    setTimeout(() => {\r\n        alerta.remove();\r\n    }, 3500);\r\n}\r\n"]}